params {

    // set platform
    platform              = "ont"

    //params
    prepped_data          = "${projectDir}/tests/data/nanopore_reads"
    refseq                = "${projectDir}/tests/data/refseq_haplo.fasta"
    ref_gbk               = "${projectDir}/tests/data/test_reference.gbk"
    primer_bed            = "${projectDir}/tests/data/primer_bed_haplo.bed"

    downsample_to         = 0

    // Minimum variant frequency to call a variant.
    min_variant_frequency = 0.2

    // the minimum acceptable average quality for a given read
    min_qual              = 10

    // split off ont results
    params.ont_results    = params.results + "/test_results"

    // Where to place the Nanopore workflow run command
    run_command           = params.ont_results

    // basecalling and demultiplexing results
    basecall_results      = params.ont_results + "/01_basecalled_demuxed"
    basecall_bams         = params.basecall_results + "/bams"
    basecall_fastqs       = params.basecall_results + "/fastqs"

    // primer handling results
    primer_handling       = params.ont_results + "/02_primer_handling"
    respliced             = params.primer_handling + "/01_respliced_primers"
    complete_amplicons    = params.primer_handling + "/02_complete_amplicons"
    merged_by_sample      = params.primer_handling + "/03_merged_by_sampe"

    // alignment results
    alignment             = params.ont_results + "/03_alignments"
    mosdepth              = params.alignment + "/01_mosdepth"
    cov_plots             = params.alignment + "/02_coverage_plots"

    // consensus results
    consensus             = params.ont_results + "/04_consensus_seqs"

    // metagenomic results 
    metagenomics          = params.ont_results + "/metagenomics"

    //haplyotyping results 
    haplotyping           = params.ont_results + "/haplotyping"

    // variant results
    variants              = params.ont_results + "/05_variants"
    ivar                  = params.variants + "/01_ivar_tables"
    vcf                   = params.variants + "/02_annotated_vcfs"
    variant_tsv           = params.variants + "/03_variant_tsv"
    haplo                 = params.variants + "/04_haplotypes"

    // qc results
    qc                    = params.ont_results + "/06_QC"

    // phylo results
    phylo                 = params.ont_results + "/07_phylo"
    nextclade             = params.phylo + "/01_nextclade"
}
